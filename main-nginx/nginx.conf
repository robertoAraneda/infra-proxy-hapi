events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging with Cloudflare info
    log_format cloudflare '$http_cf_connecting_ip - $remote_user [$time_local] "$request" '
                         '$status $body_bytes_sent "$http_referer" '
                         '"$http_user_agent" CF="$http_cf_ray"';

    access_log /var/log/nginx/access.log cloudflare;
    error_log /var/log/nginx/error.log warn;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 20M;

    # Set real IP from Cloudflare
    set_real_ip_from 173.245.48.0/20;
    set_real_ip_from 103.21.244.0/22;
    set_real_ip_from 103.22.200.0/22;
    set_real_ip_from 103.31.4.0/22;
    set_real_ip_from 141.101.64.0/18;
    set_real_ip_from 108.162.192.0/18;
    set_real_ip_from 190.93.240.0/20;
    set_real_ip_from 188.114.96.0/20;
    set_real_ip_from 197.234.240.0/22;
    set_real_ip_from 198.41.128.0/17;
    set_real_ip_from 162.158.0.0/15;
    set_real_ip_from 104.16.0.0/13;
    set_real_ip_from 104.24.0.0/14;
    set_real_ip_from 172.64.0.0/13;
    set_real_ip_from 131.0.72.0/22;
    real_ip_header CF-Connecting-IP;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript 
               application/javascript application/xml+rss 
               application/json;

    # Rate limiting based on real IP
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=api:10m rate=20r/s;

    # Upstream definitions
    upstream keycloak-backend {
        server keycloak:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream kong-backend {
        server kong:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream kong-admin-backend {
        server kong:8001 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream konga-backend {
        server konga:1337 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # HTTP server (Cloudflare will connect here in "Full" mode)
    server {
        listen 80;
        server_name openid.onfhir.cl gateway.onfhir.cl admin.onfhir.cl;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "main-proxy-healthy\n";
            add_header Content-Type text/plain;
        }

        # ACME challenge for Let's Encrypt
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # Backend selection based on host
        set $backend "";
        
        if ($host = openid.onfhir.cl) {
            set $backend keycloak-backend;
        }

        if ($host = gateway.onfhir.cl) {
            set $backend kong-backend;
        }

        if ($host = admin.onfhir.cl) {
            set $backend konga-backend;
        }

        # Main proxy configuration
        location / {
            if ($backend = "") {
                return 404;
            }
            
            limit_req zone=general burst=20 nodelay;
            
            proxy_pass http://$backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # Important: Tell backend the original request was HTTPS
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port 443;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeouts
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }

        # Keycloak Admin console (only for openid.onfhir.cl)
        location /admin {
            if ($host != openid.onfhir.cl) {
                return 404;
            }
            
            limit_req zone=auth burst=10 nodelay;
            
            proxy_pass http://keycloak-backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port 443;
        }

        # Kong Admin API (only for gateway.onfhir.cl)
        location /admin-api/ {
            if ($host != gateway.onfhir.cl) {
                return 404;
            }
            
            limit_req zone=auth burst=15 nodelay;
            
            proxy_pass http://kong-admin-backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port 443;
        }
    }

    # HTTPS server (for direct access, bypassing Cloudflare)
    server {
        listen 443 ssl http2;
        server_name openid.onfhir.cl gateway.onfhir.cl admin.onfhir.cl;

        # SSL configuration - using multi-domain certificate
        ssl_certificate /etc/letsencrypt/live/openid.onfhir.cl/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/openid.onfhir.cl/privkey.pem;
        
        # Modern SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;

        # Backend selection based on host
        set $backend "";
        
        if ($host = openid.onfhir.cl) {
            set $backend keycloak-backend;
        }

        if ($host = gateway.onfhir.cl) {
            set $backend kong-backend;
        }

        if ($host = admin.onfhir.cl) {
            set $backend konga-backend;
        }

        # Main proxy configuration
        location / {
            if ($backend = "") {
                return 404;
            }
            
            limit_req zone=general burst=20 nodelay;
            
            proxy_pass http://$backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port 443;
            
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Keycloak Admin console
        location /admin {
            if ($host != openid.onfhir.cl) {
                return 404;
            }
            
            limit_req zone=auth burst=10 nodelay;
            
            proxy_pass http://keycloak-backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port 443;
            
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Kong Admin API
        location /admin-api/ {
            if ($host != gateway.onfhir.cl) {
                return 404;
            }
            
            limit_req zone=auth burst=15 nodelay;
            
            proxy_pass http://kong-admin-backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port 443;
            
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }
}